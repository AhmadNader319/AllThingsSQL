-- Script to perform various queries on customer, salesman, and orders tables
-- The SQL queries exhibit increasing complexity by nesting subqueries, incorporating aggregate
-- functions within subqueries (like AVG and MAX), and using different subquery operators such as =,
-- IN, and EXISTS to perform sophisticated filtering based on related data. Furthermore, the
-- introduction of JOIN operations combines data from multiple tables based on relationships 
-- defined in subqueries or direct conditions, enabling more intricate data retrieval and analysis.

-- Display Customers with ID Below 2001 Under Salesperson Mc Lyon
SELECT *
FROM customer
WHERE customer_id < 2001
  AND salesman_id = (
    SELECT salesman_id
    FROM salesman
    WHERE name = 'Mc Lyon'
  );

-- Display all orders issued by Paul Adam.
SELECT *
FROM orders
WHERE salesman_id = (
    SELECT salesman_id
    FROM salesman
    WHERE name = 'Paul Adam'
  );

-- Display Orders Generated by London-Based Salespeople
SELECT *
FROM orders
WHERE salesman_id IN (
    SELECT salesman_id
    FROM salesman
    WHERE city = 'London'
  );

-- Display Orders from Salespeople Handling Customer ID 3007
SELECT *
FROM orders
WHERE salesman_id IN (
    SELECT DISTINCT salesman_id
    FROM orders
    WHERE customer_id = 3007
  );

-- Display Orders Exceeding Average Value on 2012-10-10
SELECT *
FROM orders
WHERE purch_amt > (
    SELECT AVG(purch_amt)
    FROM orders
    WHERE ord_date = '2012-10-10'
  );

-- Display Orders Generated in New York City
SELECT *
FROM orders
WHERE customer_id IN (
    SELECT customer_id
    FROM customer
    WHERE city = 'New York'
  );

-- Display Orders of Salespeople with Maximum Commission
SELECT *
FROM orders
WHERE salesman_id IN (
    SELECT salesman_id
    FROM salesman
    WHERE commision = (SELECT MAX(commision) FROM salesman)
  );

-- Display Customers Who Placed Orders on 2012-08-17
-- Return ord_no, purch_amt, ord_date, customer_id, salesman_id, and cust_name.
SELECT
    o.ord_no,
    o.purch_amt,
    o.ord_date,
    o.customer_id,
    o.salesman_id,
    c.cust_name
FROM orders AS o
JOIN customer AS c ON o.customer_id = c.customer_id
WHERE o.ord_date = '2012-08-17';

-- Show All Customers If Any Are Located in London
-- Display all customer data if at least one customer lives in London
SELECT *
FROM customer
WHERE EXISTS (
    SELECT *
    FROM customer
    WHERE city = 'London'
  );

-- Show Order Sums by Date Exceeding Max Order by 1000
SELECT
    ord_date,
    SUM(purch_amt)
FROM orders
GROUP BY ord_date
HAVING SUM(purch_amt) > (SELECT MAX(purch_amt) FROM orders) + 1000
ORDER BY ord_date;

-- Find Salespeople in Cities with at Least One Customer
SELECT DISTINCT s.*
FROM salesman AS s
JOIN customer AS c ON s.city = c.city;
